@using GmailWebClient.Services.Models
@model GmailWebClient.Models.MailMessageModel
@{
    Layout = null;
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Mail Client">

    <title>Mail client</title>
    @Styles.Render("~/Content/pure.min.css")
    @Styles.Render("~/Content/bootstrap.min.css")
    @Styles.Render("~/Content/bootstrap-theme.min.css")
    @Styles.Render("~/Content/email")
</head>
<body ng-app="mailApp" ng-controller="emailController">
    <div id="layout" class="content pure-g">
        <div id="nav" class="pure-u">
            <a href="#" class="nav-menu-button">Menu</a>

            <div class="nav-inner">
                <button class="primary-button pure-button" data-toggle="modal" data-target="#composeMessageModal">Compose</button>

                <div class="pure-menu">
                    <ul class="pure-menu-list" id="mailbox-list">
                        @foreach (var mailbox in (Mailbox[])Enum.GetValues(typeof(Mailbox)))
                        {
                            <li class="pure-menu-item @(mailbox == Mailbox.Inbox ? "active" : "")" id="#Mailbox-@mailbox.ToString()" data-value="@((int)mailbox)"><a href="#" class="pure-menu-link" ng-click="changeMailbox(@((int)mailbox));">@mailbox.ToString()</a></li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div id="list" class="pure-u-1">
            <div class="list">
                <short-description ng-repeat="message in values.messages" info="message"></short-description>
            </div>
            <button id="load-more" class="primary-button pure-button" ng-click="loadMessagesList();">Load more</button>
        </div>

        <div id="main" class="pure-u-1">
            <message info="values.message" ng-show="values.message"></message>
        </div>
    </div>

    <script src="http://yui.yahooapis.com/3.17.2/build/yui/yui-min.js"></script>

    <script>
        YUI().use('node-base', 'node-event-delegate', function (Y) {

            var menuButton = Y.one('.nav-menu-button'),
                nav = Y.one('#nav');

            // Setting the active class name expands the menu vertically on small screens.
            menuButton.on('click', function (e) {
                nav.toggleClass('active');
            });

            // Your application code goes here...

        });

        window.user = {
            address: '@ViewBag.UserAddress'
        };
</script>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/angular")
    @Scripts.Render("~/bundles/email")

    <div class="modal fade" id="composeMessageModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                @using (Ajax.BeginForm("SendMessage", null, new AjaxOptions
                                                                      {
                                                                          HttpMethod = "Post",
                                                                          OnBegin = "beforeMessageSend",
                                                                          OnComplete = "onCompleteMessageSent",
                                                                          OnSuccess = "onSuccessSentMessage",
                                                                          OnFailure = "onFailedSentMessage"
                                                                      }, new { @class = "pure-form pure-form-aligned", enctype = "multipart/form-data" }))
                {
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel">Compose message</h4>
                    </div>
                    <div class="modal-body">

                        <fieldset>
                            <div class="pure-control-group">
                                @Html.LabelFor(x => x.Subject)
                                @Html.TextBoxFor(x => x.Subject)
                                @Html.ValidationMessageFor(x => x.Subject)
                            </div>

                            <div class="pure-control-group">
                                @Html.LabelFor(x => x.To)
                                @Html.TextBoxFor(x => x.To)
                                @Html.ValidationMessageFor(x => x.To)
                            </div>

                            <div class="pure-control-group">
                                @Html.LabelFor(x => x.Cc)
                                @Html.TextBoxFor(x => x.Cc)
                                @Html.ValidationMessageFor(x => x.Cc)
                            </div>

                            <div class="pure-control-group">
                                @Html.LabelFor(x => x.Bcc)
                                @Html.TextBoxFor(x => x.Bcc)
                                @Html.ValidationMessageFor(x => x.Bcc)
                            </div>

                            @*<div class="pure-control-group">
                                @Html.LabelFor(x => x.Attachments)
                                @Html.TextBoxFor(x => x.Attachments, new { type = "file", multiple = "multiple"})
                            </div>*@

                            <div class="pure-control-group">
                                @Html.LabelFor(x => x.Body)
                                @Html.TextAreaFor(x => x.Body)
                                @Html.ValidationMessageFor(x => x.Body)
                            </div>
                        </fieldset>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="pure-button" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="primary-button pure-button">Send</button>
                    </div>
                }
            </div>
        </div>
    </div>
</body>
</html>
